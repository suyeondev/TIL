SELECT  *
FROM    EMPLOYEE;

UPDATE  EMPLOYEE
SET     JOB_ID = (SELECT JOB_ID
                  FROM   EMPLOYEE
                  WHERE  EMP_NAME ='성해교')
                , DEPT_ID ='50'
WHERE   EMP_NAME = '심하균'

UPDATE  EMPLOYEE
SET     MARRIAGE  = DEFAULT
WHERE   EMP_ID = '210';

SELECT  *
FROM    LOCATION;



--실습
--1 TABLE 생성
CREATE TABLE MEMBER(
    MEMBER_ID   NUMBER(10)      PRIMARY KEY,
    NAME        VARCHAR2(25)    NOT NULL,
    ADDRESS     VARCHAR2(100)   ,
    CITY        VARCHAR2(30)    ,
    PHONE       VARCHAR2(15)    ,
    JOIN_DATE   DATE            DEFAULT SYSDATE NOT NULL
);

CREATE TABLE TITLE(
    TITLE_ID    NUMBER(10)      PRIMARY KEY,
    TITLE       VARCHAR2(60)    NOT NULL,
    DESCRIPTION VARCHAR2(400)   NOT NULL,
    RATING      VARCHAR2(20)    CHECK(RATING IN('18가','15가','12가','전체가')),
    CATEGORY    VARCHAR2(20)     CHECK(CATEGORY IN('드라마','코미디','액션','아동','SF','다큐멘터리')),
    RELEASE_DATE    DATE
);  
 
CREATE TABLE TITLE_COPY(
    COPY_ID     NUMBER(10),
    TITLE_ID    NUMBER(10)      REFERENCES TITLE(TITLE_ID),
    STATUS      VARCHAR2(20)    CHECK(STATUS IN ('대여가능','파손','대여중','예약'))  NOT NULL,
    PRIMARY KEY(COPY_ID,TITLE_ID)
);

CREATE TABLE    RESERVATION(
    RES_DATE    DATE,
    MEMBER_ID   NUMBER(10)  REFERENCES MEMBER(MEMBER_ID),
    TITLE_ID    NUMBER(10)  REFERENCES TITLE(TITLE_ID),
    PRIMARY KEY(RES_DATE, MEMBER_ID, TITLE_ID)
);

CREATE TABLE    RENTAL(
    BOOK_DATE   DATE        DEFAULT SYSDATE,
    MEMBER_ID   NUMBER(10)  REFERENCES MEMBER(MEMBER_ID),
    COPY_ID     NUMBER(10) , 
    TITLE_ID    NUMBER(10) ,
    ACT_RET_DATE    DATE,
    EXP_RET_DATE    DATE    DEFAULT SYSDATE+2,
    FOREIGN KEY(COPY_ID, TITLE_ID) REFERENCES TITLE_COPY(COPY_ID,TITLE_ID),
    PRIMARY KEY( BOOK_DATE, MEMBER_ID, COPY_ID, TITLE_ID)
);

--2. member 테이블과 title테이블의 각 행을 고유하게 식별하기 위한 시퀀스를 생성하시오. 
-- A. member테이블의 member_id : 101번부터 부여되며 캐시하지 않음. 시퀀스명은 member_id_seq
-- B. title테이블의 title_id: 92번부터 부여되며 캐시하지 않음 시퀀스명은 title_id_seq
CREATE SEQUENCE     MEMBER_ID_SEQ
START WITH  101;

CREATE SEQUENCE     TITLE_ID_SEQ
START WITH 92 ;

--3. title 테이블에 다음 데이터를 입력하시오. title_id는 시퀀스로부터 값을 받아 입력할것.
INSERT  INTO TITLE VALUES (TITLE_ID_SEQ.NEXTVAL,'인어공주','인어공주 설명','전체가','아동','95/10/05');
INSERT  INTO TITLE VALUES (TITLE_ID_SEQ.NEXTVAL,'매트릭스','매트릭스 설명','15가','SF','95/05/19');
INSERT  INTO TITLE VALUES (TITLE_ID_SEQ.NEXTVAL,'에이리언','에이리언 설명','18가','SF','95/08/12');
INSERT  INTO TITLE VALUES (TITLE_ID_SEQ.NEXTVAL,'모던타임즈','모던타임즈 설명','전체가','코미디','95/07/12');
INSERT  INTO TITLE VALUES (TITLE_ID_SEQ.NEXTVAL,'러브스토리','러브스토리 설명','전체가','드라마','95/09/12');
INSERT  INTO TITLE VALUES (TITLE_ID_SEQ.NEXTVAL,'람보','람보 설명','18가','액션','95/06/01');

SELECT  *   FROM    TITLE;

--4. member테이블에 다음 데이터를 입력하시오. member_id는 시퀀스로부터 값을 받아 입력할것.
INSERT INTO MEMBER VALUES (MEMBER_ID_SEQ.NEXTVAL,'김철수','강남구','서울','889-6666','90/03/08');
INSERT INTO MEMBER VALUES (MEMBER_ID_SEQ.NEXTVAL,'이영희','서면','부산','355-8882','90/03/08');
INSERT INTO MEMBER VALUES (MEMBER_ID_SEQ.NEXTVAL,'최진국','동광양','제주','852-5764','91/06/17');
INSERT INTO MEMBER VALUES (MEMBER_ID_SEQ.NEXTVAL,'강준호','홍제동','강릉','559-7777','90/04/07');
INSERT INTO MEMBER VALUES (MEMBER_ID_SEQ.NEXTVAL,'민병국','전민동','대전','559-8741','91/01/18');
INSERT INTO MEMBER VALUES (MEMBER_ID_SEQ.NEXTVAL,'오민수','북구','광주','542-9988','91/01/18');
SELECT  *   FROM    MEMBER;
--5. 다음과 같은 테이프 정보를 title_copy테이블에 임력하시오 title_id 컬럼의 값을 title 테이블에서 확인하여 입력할 것.
-- 즉, 인어공주를 title에서 검색하여 리턴된 값(92)를 입력하시오.
INSERT INTO TITLE_COPY VALUES('1',(SELECT TITLE_ID FROM TITLE WHERE TITLE = '인어공주'),'대여가능');
INSERT INTO TITLE_COPY VALUES('1',(SELECT TITLE_ID FROM TITLE WHERE TITLE = '매트릭스'),'대여가능');
INSERT INTO TITLE_COPY VALUES('2',(SELECT TITLE_ID FROM TITLE WHERE TITLE = '매트릭스'),'대여중');
INSERT INTO TITLE_COPY VALUES('1',(SELECT TITLE_ID FROM TITLE WHERE TITLE = '에이리언'),'대여가능');
INSERT INTO TITLE_COPY VALUES('1',(SELECT TITLE_ID FROM TITLE WHERE TITLE = '모던타임즈'),'대여가능');
INSERT INTO TITLE_COPY VALUES('2',(SELECT TITLE_ID FROM TITLE WHERE TITLE = '모던타임즈'),'대여가능');
INSERT INTO TITLE_COPY VALUES('3',(SELECT TITLE_ID FROM TITLE WHERE TITLE = '모던타임즈'),'대여중');
INSERT INTO TITLE_COPY VALUES('1',(SELECT TITLE_ID FROM TITLE WHERE TITLE = '러브스토리'),'대여가능');
INSERT INTO TITLE_COPY VALUES('1',(SELECT TITLE_ID FROM TITLE WHERE TITLE = '람보'),'대여가능');
SELECT *    FROM TITLE_COPY;
--6. 다음과 같은 대여정보를 rental테이블에 입력하시오. 
-- 여기서, 인어공주를 title에서 검색하여 리턴된 값(92)과 김철수를 member에서 검색하여 리턴된 값(101)을 테이블에 입력하시오.
INSERT INTO RENTAL  VALUES(SYSDATE-3,(SELECT MEMBER_ID FROM MEMBER WHERE NAME ='김철수'),'1',(SELECT TITLE_ID FROM TITLE WHERE TITLE = '인어공주'),SYSDATE-2,SYSDATE-1);
INSERT INTO RENTAL(BOOK_DATE,MEMBER_ID,COPY_ID,TITLE_ID,EXP_RET_DATE)  VALUES(SYSDATE-1,(SELECT MEMBER_ID FROM MEMBER WHERE NAME ='최진국'),'2',(SELECT TITLE_ID FROM TITLE WHERE TITLE = '매트릭스'),SYSDATE+1);
INSERT INTO RENTAL(BOOK_DATE,MEMBER_ID,COPY_ID,TITLE_ID,EXP_RET_DATE)  VALUES(SYSDATE-2,(SELECT MEMBER_ID FROM MEMBER WHERE NAME ='강준호'),'3',(SELECT TITLE_ID FROM TITLE WHERE TITLE = '모던타임즈'),SYSDATE);
INSERT INTO RENTAL  VALUES(SYSDATE-4,(SELECT MEMBER_ID FROM MEMBER WHERE NAME ='민병국'),'1',(SELECT TITLE_ID FROM TITLE WHERE TITLE = '람보'),SYSDATE-2,SYSDATE-2);
SELECT  *   FROM    RENTAL;

--7. 비디오 제목, 테이프의 대여 가능 여부, 대여된 경우 예상 반납 일자를 보여주는 title_avail뷰를 작성하시오.
CREATE OR REPLACE VIEW  TITLE_AVAIL
AS (SELECT  T.TITLE,
        TC.COPY_ID,
        TC.STATUS,
        CASE WHEN (R.COPY_ID = TC.COPY_ID AND R.TITLE_ID =TC.TITLE_ID)  THEN EXP_RET_DATE ELSE NULL END  AS EXP_RET_DATE
FROM        TITLE           T 
LEFT JOIN   TITLE_COPY      TC     ON(TC.TITLE_ID = T.TITLE_ID)
LEFT JOIN   RENTAL          R      ON(T.TITLE_ID = R.TITLE_ID));

SELECT * FROM RENTAL;
    
--8. 다음 데이터를 추가하시오. 
---A.
SELECT * FROM TITLE_COPY;
INSERT  INTO TITLE VALUES (TITLE_ID_SEQ.NEXTVAL,'스타워즈','스타워즈 설명','전체가','SF','77/07/07');
INSERT  INTO TITLE_COPY VALUES('1',(SELECT TITLE_ID FROM TITLE WHERE TITLE = '스타워즈'),'대여가능');
INSERT  INTO TITLE_COPY VALUES('2',(SELECT TITLE_ID FROM TITLE WHERE TITLE = '스타워즈'),'대여가능');
---B
SELECT * FROM RESERVATION;
INSERT  INTO RESERVATION VALUES (SYSDATE,(SELECT MEMBER_ID FROM MEMBER WHERE NAME ='이영희'),(SELECT TITLE_ID FROM TITLE WHERE TITLE ='스타워즈'));
INSERT  INTO RESERVATION VALUES (SYSDATE,(SELECT MEMBER_ID FROM MEMBER WHERE NAME ='오민수'),(SELECT TITLE_ID FROM TITLE WHERE TITLE ='러브스토리'));
---C
DELETE RESERVATION WHERE MEMBER_ID = (SELECT MEMBER_ID FROM MEMBER WHERE NAME ='이영희');
INSERT INTO RENTAL(MEMBER_ID,COPY_ID,TITLE_ID)  VALUES((SELECT MEMBER_ID FROM MEMBER WHERE NAME ='이영희'),'1',(SELECT TITLE_ID FROM TITLE WHERE TITLE = '스타워즈'));
UPDATE TITLE_COPY SET STATUS ='대여중' WHERE COPY_ID ='1' AND TITLE_ID = (SELECT TITLE_ID FROM TITLE WHERE TITLE = '스타워즈');

SELECT * FROM  TITLE_AVAIL ; 

--9
ALTER TABLE TITLE ADD PRICE NUMBER(5) DEFAULT 0 NOT NULL;
SELECT * FROM   TITLE;
UPDATE TITLE    SET PRICE = 3000 WHERE  TITLE ='인어공주'; 
UPDATE TITLE    SET PRICE = 2500 WHERE  TITLE ='매트릭스'; 
UPDATE TITLE    SET PRICE = 2000 WHERE  TITLE ='에이리언'; 
UPDATE TITLE    SET PRICE = 3000 WHERE  TITLE ='모던타임즈'; 
UPDATE TITLE    SET PRICE = 3500 WHERE  TITLE ='러브스토리'; 
UPDATE TITLE    SET PRICE = 2000 WHERE  TITLE ='람보';
UPDATE TITLE    SET PRICE = 1500 WHERE  TITLE ='스타워즈'; 

--10
SELECT      NAME AS 회원명,
            TITLE AS 제목,
            BOOK_DATE AS 대여일,
            ACT_RET_DATE - BOOK_DATE AS 기간
FROM        RENTAL  R
JOIN        TITLE   T   ON(T.TITLE_ID = R.TITLE_ID)
JOIN        MEMBER  M   ON(R.MEMBER_ID = M.MEMBER_ID)




--18
SELECT  STUDENT_NO,
        STUDENT_NAME
FROM    (SELECT  STUDENT_NO,
                 STUDENT_NAME,
                 AVG(POINT),
                 ROW_NUMBER () OVER(ORDER BY AVG(POINT) DESC) AS ROW_NUM
         FROM    TB_STUDENT
         JOIN    TB_GRADE    USING(STUDENT_NO)
         WHERE   DEPARTMENT_NO = (SELECT     DEPARTMENT_NO
                                  FROM        TB_DEPARTMENT
                                  WHERE       DEPARTMENT_NAME ='국어국문학과')

         GROUP BY STUDENT_NO, STUDENT_NAME
         )
WHERE   ROW_NUM = '1';
